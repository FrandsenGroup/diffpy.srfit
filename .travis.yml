# Use container-based travis workers
sudo: false

language: generic

os:
  - linux
  - osx

env:
  - MYUSEMC=true MYPYTHON_VERSION=3.4
  - MYUSEMC=true MYPYTHON_VERSION=3.5
  - MYUSEMC=true MYPYTHON_VERSION=3.6
  - MYUSEMC=false

matrix:
  exclude:
    - os: linux
      env: MYUSEMC=false

git:
  depth: 999999

branches:
  except:
    - /^v[0-9]/

before_install:
  - MYNAME=diffpy.srfit
  - MYCOMMIT="$(git rev-parse HEAD)"
  - umask 022
  - git fetch origin --tags
  - if ${MYUSEMC}; then
        NOBREW=true; NOMC=false;
        MYPIP=pip;
    else
        NOBREW=false; NOMC=true;
        MYPIP=pip3; MYPIPFLAGS="--user";
    fi
  - MYMCREPO=https://repo.continuum.io/miniconda
  - case ${TRAVIS_OS_NAME} in
    linux)
        MYMCBUNDLE=Miniconda3-latest-Linux-x86_64.sh ;;
    osx)
        MYMCBUNDLE=Miniconda3-latest-MacOSX-x86_64.sh ;;
    *)
        echo "Unsupported operating system." >&2;
        exit 2 ;;
    esac
  - MYRUNDIR=${PWD}/build/rundir

  - mkdir -p ~/pkgs
  - mkdir -p ${MYRUNDIR}
  - cp .coveragerc ${MYRUNDIR}/

  - $NOMC || pushd ~/pkgs
  - $NOMC || wget --timestamping ${MYMCREPO}/${MYMCBUNDLE}
  - $NOMC || test -x ~/mc/bin/conda || bash ${MYMCBUNDLE} -b -f -p ~/mc
  - $NOMC || popd
  - $NOMC || source ~/mc/bin/activate base
  - $NOMC || conda update --yes conda
  - $NOMC || conda install --yes conda-build jinja2
  - $NOMC || conda create --name=testenv --yes python=${MYPYTHON_VERSION} coverage
  - $NOMC || conda config --add channels diffpy
  # FIXME - keep just the "diffpy" channel for public release.
  - $NOMC || conda config --add channels diffpy/channel/dev

  - $NOBREW || test "${TRAVIS_OS_NAME}" = "osx" || exit $?
  - $NOBREW || brew update
  - $NOBREW || brew upgrade python
  - $NOBREW || brew install gcc || brew link --overwrite gcc
  - $NOBREW || brew install --without-python@2 numpy
  - $NOBREW || devutils/makesdist
  - $NOBREW || MYTARBUNDLE="$(ls -t "${PWD}"/dist/*.tar.gz | head -1)"

install:
  - $NOMC || conda build --python=${MYPYTHON_VERSION} conda-recipe
  - $NOMC || conda render --python=${MYPYTHON_VERSION} --output conda-recipe |
                sed 's,.*/,,; s/[.]tar[.]bz2$//; s/-/=/g' > /tmp/mypackage.txt
  - $NOMC || source activate testenv
  - $NOMC || conda install --yes --use-local --file=/tmp/mypackage.txt
  # TODO - add srfit-sasview when ready for Python 3.
  - $NOMC || conda install --yes
                diffpy.structure pyobjcryst diffpy.srreal

  - $NOBREW || $MYPIP install $MYPIPFLAGS coverage
  # install diffpy.structure from the python3 development branch.
  # TODO - replace with PyPI version later.
  - $NOBREW || $MYPIP install $MYPIPFLAGS https://github.com/diffpy/diffpy.structure/archive/python3.tar.gz
  - $NOBREW || $MYPIP install $MYPIPFLAGS "${MYTARBUNDLE}"

  - cd ${MYRUNDIR}
  - MYGIT_REV=$(python3 -c "import ${MYNAME}.version as v; print(v.__git_commit__)")
  - if [[ "${MYCOMMIT}" != "${MYGIT_REV}" ]]; then
        echo "Version mismatch ${MYCOMMIT} vs ${MYGIT_REV}.";
        exit 1;
    fi

before_script:
  - $NOBREW || USER_BASE="$(python3 -c 'import site; print(site.USER_BASE)')"
  - $NOBREW || PATH="${USER_BASE}/bin:${PATH}"

script:
  - coverage run --source ${MYNAME} -m ${MYNAME}.tests.run

after_success:
  # do not post coverage reports when testing with system Python.
  - $NOMC || $MYPIP install $MYPIPFLAGS codecov
  - $NOMC || codecov
